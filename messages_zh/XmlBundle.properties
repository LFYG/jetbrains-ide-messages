xml.validate.tab.content.title=验证
xml.validate.no.errors.detected.status.message=没有检测到的错误
validate.xml.open.message.view.command.name=打开消息视图
xml.validate.validation.is.running.terminate.confirmation.text=验证正在运行.终止它?
xml.validate.validation.is.running.terminate.confirmation.title=验证正在运行

#Docs generation
xml.javadoc.tag.name.message=标签名称
xml.javadoc.attribute.name.message=属性名
xml.javadoc.description.message=描述
xml.javadoc.start.tag.could.be.omitted.message=开始标签: 可以省略 (&N)
xml.javadoc.end.tag.could.be.omitted.message=结束标签: 可以省略 (&N)
xml.javadoc.is.empty.message=是空的: true (&N)
xml.javadoc.attr.type.message=属性类型: {0} (&N)
xml.javadoc.attr.default.required.message=属性默认: required (&N)
html.quickdoc.additional.template=更多信息在 <a href=\"{0}\">W3C网</a>, <a href=\"{1}\">参考网站</a>.
#0 - boolean (is deprecated)
xml.javadoc.deprecated.message=已弃用: {0} (&N)
xml.javadoc.defined.in.loose.dtd.message=定义在: loose dtd (&N)
xml.javadoc.defined.in.frameset.dtd.message=定义在: frameset dtd (&N)
xml.javadoc.defined.in.any.dtd.message=定义在: any dtd (&N)
xml.javadoc.complex.type.message=复杂类型
#Check Image Size inspection
html.inspections.group.name=HTML
html.inspections.check.image.size=图像尺寸不匹配
html.inspections.check.empty.tag=空标记
html.inspections.check.valid.script.tag=畸形内容的<script>标记
html.inspections.check.empty.script.message=空标签在一些浏览器中无效
html.inspections.check.empty.script.tag.fix.message=替换Empyt End为Empyt Body
html.inspections.check.image.width.message=原始图像宽度为{0}
html.inspections.check.image.width.fix.message=设置宽度值为{0}
html.inspections.check.image.height.message=原始图像高度为{0}
html.inspections.check.image.height.fix.message=设置高度值为{0}
html.inspections.check.deprecated.tag=过时的HTML标签
html.intentions.insert.image.size=插入 background-image size
html.intentions.update.image.size=更新 background-image size
unwrap.enclosing.tag.name.action.name=删除封闭标记{0}
jsp.inspections.group.name=JSP检查
# color dialog
choose.color.dialog.title=选择颜色
choose.color.in.color.lookup=选择颜色...
# color lookup
color.name=颜色名:  {0} (&N)
color.rgb=RGB颜色:  {0} (&N)
color.preview=<table cellpadding=0 cellspacing=0 border=0><tr><td>颜色预览: </td><td style=\"background-color: #000000; padding: 1px\">{0}</td></tr></table> (&N)
unescaped.xml.character=非转义xml字符
unescaped.xml.character.fix.message=转义{0}
unescaped.xml.character.fix.message.parameter=符号

#HtmlDeprecatedTagInspection & HtmlPresentationalElementInspection
html.deprecated.tag=已弃用的HTML标签
html.replace.tag.with.css.quickfix.text=用CSS替换{0}标记
html.replace.tag.with.css.quickfix.family.name=Replace with CSS
html.replace.tag.with.another.quickfix.text=替换标签{0}为{1}
html.replace.tag.with.another.quickfix.family.name=用另一个标签替换
html.inspections.check.presentational.tag=显示的HTML标签

#HtmlFormInputWithoutLabelInspection
html.inspections.form.input.without.label=表单输入没有相关的label
html.inspections.create.label.from.text.before.action=在元素{0}前,创建一个新的标签
html.inspections.create.label.from.text.after.action=在元素{0}后,创建一个新的标签
html.inspections.create.new.label=用{0}元素联合一个新的标签
html.inspections.unknown.target=文件参考问题
html.inspections.unknown.anchor=锚参考问题

html.annotators.non.existent.internet.resource=无法找到资源 \"{0}\"

#HtmlExtraClosingTagInspection
html.inspection.extra.closing.tag=多余的关闭标签
xml.inspection.wrong.closing.tag=错误的关闭XML/xHTML标签
xml.inspection.wrong.root.element=错误的根元素

#HtmlNonExistentInternetResourceInspection
html.inspections.non.existent.internet.resource.name=不存在的web资源

html.inspections.unknown.tag=未知HTML标签
html.inspections.unknown.attribute=未知的 HTML 标签属性
html.inspections.unknown.boolean.attribute=未知的 HTML 布尔标记属性
html.inspections.unknown.tag.checkbox.title=自定义HTML标签:
html.inspections.unknown.tag.title=自定义编辑标签
html.inspections.unknown.tag.attribute.checkbox.title=自定义 HTML 标签属性:
html.inspections.unknown.tag.boolean.attribute.checkbox.title=自定义 HTML 布尔标记属性:
html.inspections.unknown.tag.attribute.title=自定义编辑属性
html.inspections.unknown.tag.boolean.attribute.title=编辑自定义布尔属性
html.inspections.missing.closing.tag=缺少闭合标签
xml.schema.create.complex.type.intention.name=创建复杂类型{0}
xml.schema.create.attribute.intention.name=创建属性{0}
xml.schema.create.element.intention.name=创建元素{0}
xml.schema.create.attribute.group.intention.name=创建属性组{0}
xml.schema.create.group.intention.name=创建组{0}
xml.schema.create.simple.type.intention.name=创建简单的类型{0}
xml.dtd.create.entity.intention.name=创建实体声明{0}
xml.dtd.create.dtd.element.intention.name=创建元素声明{0}
xml.inspections.group.name=XML
xml.create.xml.declaration.intention.type=创建Xml元素声明
xml.inspections.check.tag.empty.body=XML标记Empyt Body
xml.inspections.check.file.with.xerces=文件不通过外部验证
xml.inspections.tag.empty.body=XML标记是Empyt Body
xml.inspections.replace.tag.empty.body.with.empty.end=替换Empyt Body为Empyt End
xml.inspections.check.dtd.references=未解决的DTD参考
xml.dtd.unresolved.entity.reference=未解决的实体引用{0}
xml.dtd.unresolved.element.reference=未解决的Dtd元素参考{0}
change.root.element.to=改变根标记名称为{0}
insert.required.tag.fix=插入所需的子标签{0}
insert.required.tag.fix.family=插入所需的子标签

# rename refactoring
rename.current.tag=重命名{0}:
namespace.alias=命名空间
xml.inspections.duplicate.id=复制ID
xml.inspections.invalid.id=未解决的ID
xml.javadoc.version.message=版本

# external resources
fetch.external.resource=获取外部资源
manually.setup.external.resource=手动设置外部资源
add.xsi.schema.location.for.external.resource=添加Xsi模式位置为外部资源
fetching.resource.title=获取资源
error.fetching.resource=当 fetch {0} 时发生错误
error.fetching.title=当 fetch 时发生错误
error.fetching.dependent.resource.title=当获取资源依赖时错误
fetching.progress.indicator=获取{0}
ignore.external.resource.text=忽略外部资源

# external resources dialog
dialog.title.external.resource=外部资源
label.edit.external.resource.uri=URI:
label.edit.external.resource.path=路径:
column.name.edit.external.resource.uri=URI
column.name.edit.external.resource.location=位置
display.name.edit.external.resource=模式和DTDs
label.edit.external.resource.configure.external.resources=外部模式和DTDs (&E)
label.edit.external.resource.configure.ignored.resources=忽略模式和DTDs (&I)

no.external.resources=没有外部资源
no.ignored.resources=没有忽视资源

custom.html.tag=自定义HTML标签\n
add.custom.html.tag=添加{0}到自定义的html标签
add.custom.html.attribute=添加{0}到自定义的html属性
add.custom.html.boolean.attribute=添加{0}自定义HTML布尔属性
add.optional.html.attribute=添加{0}到非必需的html属性
fix.html.family=固定 Html

xml.editor.options.misc.title=XML/HTML

invalid.url.title=无效的URL
invalid.url.no.xml.file.at.location=没有XML在位置:{0}
invalid.url.message=无效的URL:{0}
xml.folding.settings=代码折叠设置
cannot.resolve.anchor=不能解决锚 #{0}
cannot.resolve.anchor.in.file=不能解决锚 #{0} 在文件 {1}

web.editor.configuration.title=Web
browser.select.in.default.name=web浏览器


xml.split.tag.intention.action=拆分当前标签
tag.name.completion.hint=按{0}来查看标签的其他命名空间
tag.name.completion.display.name=标签名称自动完成
open_in.list.popup.title=查看文件在...
open_in.list.prefix=预览文件在...
xml.inspections.unbound.prefix=未绑定的XML命名空间前缀

html.add.table.column.after.action=在表当前位置之前添加一个新列
html.add.table.column.before.action=在表当前位置之后添加一个新列
xml.javadoc.enumeration.value.message=枚举值

xml.inspections.unused.schema=未使用的 XML 架构声明
xml.inspections.unused.schema.location=命名空间位置从未使用过
xml.inspections.unused.schema.declaration=命名空间声明从未使用过
xml.inspections.unused.schema.remove=删除未使用的命名空间声明

xml.inspections.path.resolve=文件路径解析 XML
xml.inspections.default.attribute.value=冗余默认属性值赋值

xml.inspections.global=XML 高亮

#xsd2xml and xml2xsd
url.is.empty.validation.problem=url为空
invalid.number.validation.problem=无效数字
negative.number.validation.problem=负数
result.schema.file.name.is.empty.validation.problem=结果模式文件的名字是空的
generate.schema.from.instance.document.dialog.title=从实例文档生成模式
instance.2.xsd.dialog.title=实例模式

xml2xsd.generator.error=实例2模式发生器错误
generate.schema.from.instance.xml.document.lvcslabel=从Xml文档生成实例模式
local.elements.global.complex.types.option.name=局部元素/全局复杂类型
local.elements.types.option.name=局部元素/类型
global.elements.local.types.option.name=全局元素/局部类型
select.xml.document.dialog.title=选择Xml文档
no.class.in.selected.text.editor.error.message=选中的编辑器里没有类
generate.instance.document.from.schema.lvcslabel=从模式生成实例文档
schema.generator.process.title=模式发生器
instance.to.schema.generator.error=实例到模式发生器错误
select.schema.document.dialog.title=选择模式文档
generate.instance.document.from.schema.dialog.title=从模式生成实例文档
xmlbeans.instance.document.name.tooltip=实例文档生成文件的名称
schema2instance.dialog.schema.path=模式的路径:
schema2instance.dialog.instance.document.name=实例文档名称:
schema2instance.dialog.element.name=元素名称:
schema2instance.dialog.enable.restriction.check=启用约束检查
schema2instance.dialog.enable.unique.check=启用唯一检查
instance2schema.dialog.detect.enumerations.limit=检测枚举限制:
instance2schema.dialog.design.type=设计类型:
instance2schema.dialog.detect.simple.content.type=检测简单的内容类型:
instance2schema.dialog.instance.document.path=实例文档路径:
any.dialog.status=状态
schema2.instance.no.valid.root.element.name.validation.error=无效的根元素名称
schema2.instance.output.file.name.is.empty.validation.problem=输出文件的名称无效
xmlbeans.url.tooltip=路径到模式或wsdl用于生成使用XmlBeans
xmlbeans.schema2instance.url.tooltip=路径到模式
xmlbeans.instance2schema.url.tooltip=实例文档的路径
xmlbeans.rootelement.tooltip=实例文档生成的根元素
xmlbeans.particle.valid.tooltip=使有效(限制)粒子规则
xmlbeans.unique.particle.tooltip=使唯一的粒子规则
xmlbeans.designtype.tooltip=XMLSchema设计类型
xmlbeans.simplecontenttype.tooltip=简单的内容类型检测(叶状文本)
xmlbeans.enumerations.tooltip=从下面总数检测枚举
webservice.status.tooltip=当前设置的状态,输入错误,等等
xmlbeans.instance2schema.result.schema.name=结果模式文件名称
browse.button.tooltip=浏览本地文件
instance.document.file.is.not.exist=实例文档文件不存在
xml2xsd.generator.error.message=不能从实例文档生成模式.检查您的xml文档
file.doesnt.exist=文件{0}不存在
error=错误
cant.rename.file=无法将{0}重命名为{1}
cant.delete.file=无法删除文件{0}
select.xsd.schema.dialog.title=选择XSD模式

emmet.title=Emmet
emmet.update.tag.title=Update tag with Emmet
emmet.configuration.title=Emmet (Zen Coding)
emmet.enable.label=启用 XML Emmet (&E)
emmet.filters.enabled.by.default=过滤器默认启用
emmet.bem.title=BEM
emmet.enable.preview=启用缩写预览 (&A)
emmet.expand.abbreviation.with=展开缩写 (&A)
emmet.href.autodetect=启用自动网址&URL识别 <a> 标签
emmet.add.edit.point.at.the.end.of.template=在模板的结尾处添加编辑点 (&P)
emmet.bem.class.name.element.separator.label=Class name's element separator:
emmet.bem.class.name.modifier.separator.label=Class name's modifier separator:
emmet.bem.short.element.prefix.label=Short element prefix:

title.cannot.create.html.file=无法创建HTML文件
new.html.file.action=HTML文件
new.html.file.action.description=创建新HTML文件
html5.outline.mode=HTML5大纲

start.browser.startup.page=启动页面: (&G)
start.browser.border.label.open.browser=打开浏览器
start.browser.checkbox.start.browser=在启动后
start.browser.with.js.debugger=用JavaScript调试器 (&J)

javascript.debugger.settings.choose.file.title=选择
javascript.debugger.settings.choose.file.subtitle=选择文件调试 JavaScript

setting.builtin.server.category.label=内置的服务器
setting.value.builtin.server.port.label=内置的服务器和端口 (&P):
setting.value.can.accept.external.connections=能接受外部连接 (&E)
setting.value.builtin.server.allow.unsigned.requests=允许未签名的请求 (&A)
