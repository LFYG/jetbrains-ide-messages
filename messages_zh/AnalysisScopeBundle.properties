# {0} = Inspection|Dependency Analysis|Duplication Analysis
specify.analysis.scope=指定{0}范围
analysis.scope.title={0}范围
scope.option.whole.project=整个项目 (&P)
scope.option.module=模块\"{0}\"
scope.option.module.with.mnemonic=模块\"{0}\" (&M)
scope.option.custom=自定义范围 (&C)
scope.option.include.test.sources=包含测试代码 (&T)
scope.project=项目 \"{0}\"
scope.file=文件 \"{0}\"
scope.directory=目录 \"{0}\"
scope.package=包{0}

# {0} module list comma separated, {1} - module count
scope.module.list={1, 选择, 1#模块|2#模块}{0}

#actions
action.rerun.dependency=重新运行依赖项分析
action.group.by.scope.type=按范围类型分组
action.group.by.scope.type.description=按范围类型分组(生产、测试、库)
action.show.files=显示文件
action.show.files.description=显示/隐藏文件
action.close.dependency.description=关闭依赖视图
action.module.dependencies.direction=依赖方向
action.module.dependencies.tests=Include Test Dependencies
action.analyzing.cyclic.dependencies.in.scope={0}的循环依赖
action.analyze.verb=分析
action.analysis.noun=分析
action.cyclic.dependency.title=分析循环依赖
action.flatten.packages=拼合包
action.show.modules=显示模块
action.show.modules.description=显示/隐藏模块
action.show.illegals.only=仅显示非法移民
action.show.illegals.only.description=只显示文件非法依赖
action.edit.rules=编辑规则
action.edit.rules.description=编辑依赖规则
action.select.in.left.tree=在左侧的树中选择
action.select.in.left.tree.description=在左侧的树中选择(浏览依赖)
action.forward.dependency.analysis=依赖性分析
action.backward.dependency.analysis=分析反向依赖

update.module.tree.progress.title=更新模块树
update.module.tree.progress.text=处理模块\"{0}\"循环

cyclic.dependencies.scope.dialog.title=指定{0}范围
cyclic.dependencies.scope.dialog.project.button={0}整个项目 (&P)
cyclic.dependencies.scope.dialog.module.button={0}模块\"{1}\" (&M)
cyclic.dependencies.tree.cycle.node.text=循环
cyclic.dependencies.usage.view.root.node.text=在包''{1}''里,包''{0}''的使用
cyclic.dependencies.usage.view.initial.text=从左边树选择分析的包
cyclic.dependencies.progress.text=构建依赖关系图

module.dependencies.cycle.node.text=循环{0}
module.dependencies.scope.dialog.module.button=检查模块\"{0}\" (&M)
module.dependencies.scope.dialog.project.button=检查整个项目 (&P)
module.dependencies.scope.dialog.title=指定分析范围

backward.dependencies.usage.view.root.node.text=左树选择范围的使用,在右树选择范围
backward.dependencies.usage.view.initial.text=选择在右树哪里搜索和在左树搜索什么.

forward.dependencies.usage.view.root.node.text=右树选择范围的使用,在左树选择范围
forward.dependencies.usage.view.initial.text=选择在左树哪里搜索和在右树搜索什么.

package.dependencies.progress.title=分析依赖
package.dependencies.progress.text=分析包依赖关系
backward.dependencies.progress.text=分析反向依赖

find.dependencies.progress.text=搜索使用在:{0}
usage.view.canceled=已取消
package.dependencies.toolwindow.title={0}的依赖
package.dependencies.on.toolwindow.title=在{1}上{0}的依赖
no.dependencies.found.message=在{1}没有发现{0}的依赖.
dependencies.in.imports.message=Dependencies in imports were ignored.
backward.dependencies.toolwindow.title={0}的反向依赖
package.dependencies.build.progress.text=扫描包
package.dependencies.build.process.title=扫描包

#dependencies tree nodes text
package.dependencies.library.node.text=库类
package.dependencies.test.node.text=测试类
package.dependencies.production.node.text=生产类
unknown.node.text=<未知>
package.dependencies.node.items.count= {0, choice, 1#1 entry|2#{0, number} entries}
dependencies.tree.node.default.package.abbreviation=<默认包>

#scope selector
dependencies.libraries.node.text=库
error.package.set.token.expectations=异常 ''{0}''
error.package.set.pattern.expectations=包模式是预期的
error.package.set.rparen.expected=')' 是预期的
error.package.set.position.parsing.error={0}在位置{1}

#dependencies configurations
status.bar.no.rule.violation.message=没有违背规则
status.bar.rule.violation.message=以下规则{{0, choice, 1# is|2#s are} 违反: {1}
dependency.configurable.display.name=依赖验证
dependency.configurable.deny.table.column1=禁止被...使用
dependency.configurable.deny.table.column2=位于
dependency.configurable.allow.table.column1=允许被...使用
dependency.configurable.allow.table.column2=仅位于

scope.display.name.deny.scope=在范围''{1}''禁用范围''{0}''的使用
scope.display.name.allow.scope=在范围''{1}''启用范围''{0}''的使用
scope.option.uncommitted.files=未提交的文件 (&U)
scope.option.uncommitted.files.all.changelists.choice=所有
scanning.scope.progress.title=扫描范围...
analyzing.project=正在分析项目
checking.class.files=正在检查类文件
recompile.confirmation.message=工程类文件是过期的.你要在DSM分析之前继续编译一个项目?拒绝做它可能导致不完全或不正确的数据.
project.is.out.of.date=项目已过期
skip.import.statements.checkbox.title=跳过导入语句
mark.dependency.illegal.text=非法掩码
scope.selected.files=选定的文件
scope.virtual.files=选择区域
